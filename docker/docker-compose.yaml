version: "2"

volumes:
  pandas-authn-db-volume:
  pandas-users-db-volume:
  pandas-things-db-volume:
  pandas-things-redis-volume:
  pandas-es-redis-volume:
  pandas-mqtt-broker-volume:
  pandas-rulechain-db-volume:

services:
  nats:
    image: nats:1.3.0
    container_name: pandas-nats
    command: "-c /etc/nats/nats.conf"
    restart: on-failure
    volumes:
      - ./nats/:/etc/nats
  jaeger:
    image: jaegertracing/all-in-one:1.13
    container_name: pandas-jaeger
    ports:
      - ${PD_JAEGER_PORT}:${PD_JAEGER_PORT}/udp
      - ${PD_JAEGER_FRONTEND}:${PD_JAEGER_FRONTEND}
      - ${PD_JAEGER_COLLECTOR}:${PD_JAEGER_COLLECTOR}
      - ${PD_JAEGER_CONFIGS}:${PD_JAEGER_CONFIGS}

  authn-db:
    image: postgres:10.8-alpine
    container_name: pandas-authn-db
    restart: on-failure
    environment:
      POSTGRES_USER: ${PD_AUTHN_DB_USER}
      POSTGRES_PASSWORD: ${PD_AUTHN_DB_PASS}
      POSTGRES_DB: ${PD_AUTHN_DB}
    volumes:
      - pandas-authn-db-volume:/var/lib/postgresql/data

  authn:
    image: cloustone/pandas-authn:latest
    container_name: pandas-authn
    depends_on:
      - authn-db
    expose:
      - ${PD_AUTHN_GRPC_PORT}
    ports:
      - ${PD_AUTHN_HTTP_PORT}:${PD_AUTHN_HTTP_PORT}
      - ${PD_AUTHN_GRPC_PORT}:${PD_AUTHN_GRPC_PORT}
    restart: always
    environment:
      PANDAS_PORT: ${PD_AUTHN_HTTP_PORT}
      PANDAS_DNS_SERVER: "docker-compose"
      PD_AUTHN_LOG_LEVEL: ${PD_AUTHN_LOG_LEVEL}
      PD_AUTHN_DB_HOST: authn-db
      PD_AUTHN_DB_PORT: ${PD_AUTHN_DB_PORT}
      PD_AUTHN_DB_USER: ${PD_AUTHN_DB_USER}
      PD_AUTHN_DB_PASS: ${PD_AUTHN_DB_PASS}
      PD_AUTHN_DB: ${PD_AUTHN_DB}
      PD_AUTHN_HTTP_PORT: ${PD_AUTHN_HTTP_PORT}
      PD_AUTHN_GRPC_PORT: ${PD_AUTHN_GRPC_PORT}
      PD_AUTHN_SECRET: ${PD_AUTHN_SECRET}
      PD_JAEGER_URL: ${PD_JAEGER_URL}

  things-db:
    image: postgres:10.8-alpine
    container_name: pandas-things-db
    restart: on-failure
    environment:
      POSTGRES_USER: ${PD_THINGS_DB_USER}
      POSTGRES_PASSWORD: ${PD_THINGS_DB_PASS}
      POSTGRES_DB: ${PD_THINGS_DB}
    volumes:
      - pandas-things-db-volume:/var/lib/postgresql/data

  things-redis:
    image: redis:5.0-alpine
    container_name: pandas-things-redis
    restart: on-failure
    volumes:
      - pandas-things-redis-volume:/data

  things:
    image: cloustone/pandas-things:latest
    container_name: pandas-things
    depends_on:
      - things-db
      - authn
    restart: on-failure
    environment:
      PD_THINGS_LOG_LEVEL: ${PD_THINGS_LOG_LEVEL}
      PD_THINGS_DB_HOST: things-db
      PD_THINGS_DB_PORT: ${PD_THINGS_DB_PORT}
      PD_THINGS_DB_USER: ${PD_THINGS_DB_USER}
      PD_THINGS_DB_PASS: ${PD_THINGS_DB_PASS}
      PD_THINGS_DB: ${PD_THINGS_DB}
      PD_THINGS_CACHE_URL: things-redis:${PD_REDIS_TCP_PORT}
      PD_THINGS_ES_URL: es-redis:${PD_REDIS_TCP_PORT}
      PD_THINGS_HTTP_PORT: ${PD_THINGS_HTTP_PORT}
      PD_THINGS_AUTH_HTTP_PORT: ${PD_THINGS_AUTH_HTTP_PORT}
      PD_THINGS_AUTH_GRPC_PORT: ${PD_THINGS_AUTH_GRPC_PORT}
      PD_AUTH_URL: authn:${PD_AUTHN_GRPC_PORT}
      PD_THINGS_SECRET: ${PD_THINGS_SECRET}
      PD_JAEGER_URL: ${PD_JAEGER_URL}
    ports:
      - ${PD_THINGS_HTTP_PORT}:${PD_THINGS_HTTP_PORT}
      - ${PD_THINGS_AUTH_HTTP_PORT}:${PD_THINGS_AUTH_HTTP_PORT}
      - ${PD_THINGS_AUTH_GRPC_PORT}:${PD_THINGS_AUTH_GRPC_PORT}

  users-db:
    image: postgres:10.8-alpine
    container_name: pandas-users-db
    restart: on-failure
    environment:
      POSTGRES_USER: ${PD_USERS_DB_USER}
      POSTGRES_PASSWORD: ${PD_USERS_DB_PASS}
      POSTGRES_DB: ${PD_USERS_DB}
    volumes:
      - pandas-users-db-volume:/var/lib/postgresql/data

  users:
    image: cloustone/pandas-users:latest
    container_name: pandas-users
    volumes:
      - ./users/emailer/templates/${PD_EMAIL_TEMPLATE}:/${PD_EMAIL_TEMPLATE}
    depends_on:
      - users-db
      - authn
    restart: on-failure
    environment:
      PD_USERS_LOG_LEVEL: ${PD_USERS_LOG_LEVEL}
      PD_USERS_DB_HOST: users-db
      PD_USERS_DB_PORT: ${PD_USERS_DB_PORT}
      PD_USERS_DB_USER: ${PD_USERS_DB_USER}
      PD_USERS_DB_PASS: ${PD_USERS_DB_PASS}
      PD_USERS_DB: ${PD_USERS_DB}
      PD_USERS_HTTP_PORT: ${PD_USERS_HTTP_PORT}
      PD_JAEGER_URL: ${PD_JAEGER_URL}
      PD_EMAIL_DRIVER: ${PD_EMAIL_DRIVER}
      PD_EMAIL_HOST: ${PD_EMAIL_HOST}
      PD_EMAIL_PORT: ${PD_EMAIL_PORT}
      PD_EMAIL_USERNAME: ${PD_EMAIL_USERNAME}
      PD_EMAIL_PASSWORD: ${PD_EMAIL_PASSWORD}
      PD_EMAIL_FROM_ADDRESS: ${PD_EMAIL_FROM_ADDRESS}
      PD_EMAIL_FROM_NAME: ${PD_EMAIL_FROM_NAME}
      PD_EMAIL_TEMPLATE: ${PD_EMAIL_TEMPLATE}
      PD_TOKEN_RESET_ENDPOINT: ${PD_TOKEN_RESET_ENDPOINT}
      PD_AUTHN_URL: authn:${PD_AUTHN_GRPC_PORT}
    ports:
      - ${PD_USERS_HTTP_PORT}:${PD_USERS_HTTP_PORT}

  vernemq:
    image: mainflux/vernemq:1.10.1-alpine
    container_name: pandas-vernemq
    restart: on-failure
    environment:
      DOCKER_VERNEMQ_ALLOW_ANONYMOUS: "on"
      DOCKER_VERNEMQ_LOG__CONSOLE__LEVEL: debug
    volumes:
      - pandas-mqtt-broker-volume:/var/lib/vernemq

  mqtt-adapter:
    image: cloustone/pandas-mqtt:latest
    container_name: pandas-mqtt
    depends_on:
      - vernemq
      - things
      - nats
    restart: on-failure
    environment:
      PD_MQTT_ADAPTER_LOG_LEVEL: ${PD_MQTT_ADAPTER_LOG_LEVEL}
      PD_MQTT_ADAPTER_PORT: ${PD_MQTT_ADAPTER_PORT}
      PD_MQTT_ADAPTER_WS_PORT: ${PD_MQTT_ADAPTER_WS_PORT}
      PD_MQTT_ADAPTER_ES_URL: es-redis:${PD_REDIS_TCP_PORT}
      PD_NATS_URL: ${PD_NATS_URL}
      PD_THINGS_URL: things:${PD_THINGS_AUTH_GRPC_PORT}
      PD_JAEGER_URL: ${PD_JAEGER_URL}
      PD_MQTT_ADAPTER_MQTT_TARGET_HOST: vernemq
      PD_MQTT_ADAPTER_MQTT_TARGET_PORT: ${PD_MQTT_BROKER_PORT}
      PD_MQTT_ADAPTER_WS_TARGET_HOST: vernemq
      PD_MQTT_ADAPTER_WS_TARGET_PORT: ${PD_MQTT_BROKER_WS_PORT}

  ws-adapter:
    image: cloustone/pandas-ws:latest
    container_name: pandas-ws
    depends_on:
      - things
      - nats
    restart: on-failure
    environment:
      PD_WS_ADAPTER_LOG_LEVEL: ${PD_WS_ADAPTER_LOG_LEVEL}
      PD_WS_ADAPTER_PORT: ${PD_WS_ADAPTER_PORT}
      PD_NATS_URL: ${PD_NATS_URL}
      PD_THINGS_URL: things:${PD_THINGS_AUTH_GRPC_PORT}
      PD_JAEGER_URL: ${PD_JAEGER_URL}
    ports:
      - ${PD_WS_ADAPTER_PORT}:${PD_WS_ADAPTER_PORT}

  http-adapter:
    image: cloustone/pandas-http:latest
    container_name: pandas-http
    depends_on:
      - things
      - nats
    restart: on-failure
    environment:
      PD_HTTP_ADAPTER_LOG_LEVEL: debug
      PD_HTTP_ADAPTER_PORT: ${PD_HTTP_ADAPTER_PORT}
      PD_NATS_URL: ${PD_NATS_URL}
      PD_THINGS_URL: things:${PD_THINGS_AUTH_GRPC_PORT}
      PD_JAEGER_URL: ${PD_JAEGER_URL}
    ports:
      - ${PD_HTTP_ADAPTER_PORT}:${PD_HTTP_ADAPTER_PORT}

  es-redis:
    image: redis:5.0-alpine
    container_name: pandas-es-redis
    restart: on-failure
    volumes:
      - pandas-es-redis-volume:/data

  coap-adapter:
    image: cloustone/pandas-coap:latest
    container_name: pandas-coap
    depends_on:
      - things
      - nats
    restart: on-failure
    environment:
      PD_COAP_ADAPTER_LOG_LEVEL: ${PD_COAP_ADAPTER_LOG_LEVEL}
      PD_COAP_ADAPTER_PORT: ${PD_COAP_ADAPTER_PORT}
      PD_NATS_URL: ${PD_NATS_URL}
      PD_THINGS_URL: things:${PD_THINGS_AUTH_GRPC_PORT}
      PD_JAEGER_URL: ${PD_JAEGER_URL}
    ports:
      - ${PD_COAP_ADAPTER_PORT}:${PD_COAP_ADAPTER_PORT}/udp
      - ${PD_COAP_ADAPTER_PORT}:${PD_COAP_ADAPTER_PORT}/tcp

  nginx:
    image: nginx:1.16.0-alpine
    container_name: pandas-nginx
    restart: on-failure
    volumes:
      - ./nginx/nginx-key.conf:/etc/nginx/nginx.conf.template
      - ./nginx/entrypoint.sh:/entrypoint.sh
      - ./nginx/snippets:/etc/nginx/snippets
      - ./ssl/authorization.js:/etc/nginx/authorization.js
      - ./ssl/certs/mainflux-server.crt:/etc/ssl/certs/mainflux-server.crt
      - ./ssl/certs/ca.crt:/etc/ssl/certs/ca.crt
      - ./ssl/certs/mainflux-server.key:/etc/ssl/private/mainflux-server.key
      - ./ssl/dhparam.pem:/etc/ssl/certs/dhparam.pem
    ports:
      - ${PD_NGINX_HTTP_PORT}:${PD_NGINX_HTTP_PORT}
      - ${PD_NGINX_SSL_PORT}:${PD_NGINX_SSL_PORT}
      - ${PD_NGINX_MQTT_PORT}:${PD_NGINX_MQTT_PORT}
      - ${PD_NGINX_MQTTS_PORT}:${PD_NGINX_MQTTS_PORT}
    env_file:
      - ../.env
    command: /entrypoint.sh
    depends_on:
      - things
      - users
      - mqtt-adapter
      - http-adapter
      - ws-adapter

  rulechain:
    image: cloustone/pandas-rulechain
    ports:
      - ${PD_RULECHAIN_HTTP_PORT}:${PD_RULECHAIN_HTTP_PORT}
    restart: always
    environment:
      PANDAS_PORT: ${PD_RULECHAIN_HTTP_PORT}
      PANDAS_DNS_SERVER: "docker-compose"
      PD_RULECHAIN_DB_HOST: rulechain-db
      PD_RULECHAIN_DB_PORT: ${PD_RULECHAIN_DB_PORT}
      PD_RULECHAIN_DB_USER: ${PD_RULECHAIN_DB_USER}
      PD_RULECHAIN_DB_PASS: ${PD_RULECHAIN_DB_PASS}
      PD_RULECHAIN_DB: ${PD_RULECHAIN_DB}

  rulechain-db:
    image: postgres:10.8-alpine
    container_name: pandas-rulechain-db
    restart: on-failure
    environment:
      POSTGRES_USER: ${PD_RULECHAIN_DB_USER}
      POSTGRES_PASSWORD: ${PD_RULECHAIN_DB_PASS}
      POSTGRES_DB: ${PD_RULECHAIN_DB}
    volumes:
      - pandas-rulechain-db-volume:/var/lib/postgresql/data

  lbs:
    image: cloustone/pandas-lbs
    ports:
      - ${PD_LBS_HTTP_PORT}:${PD_LBS_HTTP_PORT}
    restart: always
    environment:
      PANDAS_PORT: ${PD_LBS_HTTP_PORT}
      PANDAS_DNS_SERVER: "docker-compose"
