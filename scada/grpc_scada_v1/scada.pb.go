// Code generated by protoc-gen-go. DO NOT EDIT.
// source: scada.proto

package grpc_scada_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetWidgetsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWidgetsRequest) Reset()         { *m = GetWidgetsRequest{} }
func (m *GetWidgetsRequest) String() string { return proto.CompactTextString(m) }
func (*GetWidgetsRequest) ProtoMessage()    {}
func (*GetWidgetsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_scada_a6fea6f44a47206e, []int{0}
}
func (m *GetWidgetsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWidgetsRequest.Unmarshal(m, b)
}
func (m *GetWidgetsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWidgetsRequest.Marshal(b, m, deterministic)
}
func (dst *GetWidgetsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWidgetsRequest.Merge(dst, src)
}
func (m *GetWidgetsRequest) XXX_Size() int {
	return xxx_messageInfo_GetWidgetsRequest.Size(m)
}
func (m *GetWidgetsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWidgetsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWidgetsRequest proto.InternalMessageInfo

type GetWidgetsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWidgetsResponse) Reset()         { *m = GetWidgetsResponse{} }
func (m *GetWidgetsResponse) String() string { return proto.CompactTextString(m) }
func (*GetWidgetsResponse) ProtoMessage()    {}
func (*GetWidgetsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_scada_a6fea6f44a47206e, []int{1}
}
func (m *GetWidgetsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWidgetsResponse.Unmarshal(m, b)
}
func (m *GetWidgetsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWidgetsResponse.Marshal(b, m, deterministic)
}
func (dst *GetWidgetsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWidgetsResponse.Merge(dst, src)
}
func (m *GetWidgetsResponse) XXX_Size() int {
	return xxx_messageInfo_GetWidgetsResponse.Size(m)
}
func (m *GetWidgetsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWidgetsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetWidgetsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GetWidgetsRequest)(nil), "grpc.scada.v1.GetWidgetsRequest")
	proto.RegisterType((*GetWidgetsResponse)(nil), "grpc.scada.v1.GetWidgetsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ScadaClient is the client API for Scada service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ScadaClient interface {
	GetWidgets(ctx context.Context, in *GetWidgetsRequest, opts ...grpc.CallOption) (*GetWidgetsResponse, error)
}

type scadaClient struct {
	cc *grpc.ClientConn
}

func NewScadaClient(cc *grpc.ClientConn) ScadaClient {
	return &scadaClient{cc}
}

func (c *scadaClient) GetWidgets(ctx context.Context, in *GetWidgetsRequest, opts ...grpc.CallOption) (*GetWidgetsResponse, error) {
	out := new(GetWidgetsResponse)
	err := c.cc.Invoke(ctx, "/grpc.scada.v1.Scada/GetWidgets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ScadaServer is the server API for Scada service.
type ScadaServer interface {
	GetWidgets(context.Context, *GetWidgetsRequest) (*GetWidgetsResponse, error)
}

func RegisterScadaServer(s *grpc.Server, srv ScadaServer) {
	s.RegisterService(&_Scada_serviceDesc, srv)
}

func _Scada_GetWidgets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWidgetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScadaServer).GetWidgets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.scada.v1.Scada/GetWidgets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScadaServer).GetWidgets(ctx, req.(*GetWidgetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Scada_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.scada.v1.Scada",
	HandlerType: (*ScadaServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetWidgets",
			Handler:    _Scada_GetWidgets_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "scada.proto",
}

func init() { proto.RegisterFile("scada.proto", fileDescriptor_scada_a6fea6f44a47206e) }

var fileDescriptor_scada_a6fea6f44a47206e = []byte{
	// 116 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0x4e, 0x4e, 0x4c,
	0x49, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4d, 0x2f, 0x2a, 0x48, 0xd6, 0x83, 0x88,
	0x94, 0x19, 0x2a, 0x09, 0x73, 0x09, 0xba, 0xa7, 0x96, 0x84, 0x67, 0xa6, 0xa4, 0xa7, 0x96, 0x14,
	0x07, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x28, 0x89, 0x70, 0x09, 0x21, 0x0b, 0x16, 0x17, 0xe4,
	0xe7, 0x15, 0xa7, 0x1a, 0xc5, 0x70, 0xb1, 0x06, 0x83, 0xb4, 0x09, 0x05, 0x73, 0x71, 0x21, 0xa4,
	0x85, 0x14, 0xf4, 0x50, 0x4c, 0xd4, 0xc3, 0x30, 0x4e, 0x4a, 0x11, 0x8f, 0x0a, 0x88, 0xd9, 0x4a,
	0x0c, 0x49, 0x6c, 0x60, 0xe7, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xd6, 0x24, 0xc8, 0xbf,
	0xad, 0x00, 0x00, 0x00,
}
