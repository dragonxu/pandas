// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mixer.proto

package grpc_mixer_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AdaptorOptions struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty", bson:"Name,omitempty"`
	Protocol             string   `protobuf:"bytes,2,opt,name=Protocol" json:"Protocol,omitempty", bson:"Protocol,omitempty"`
	IsProvider           bool     `protobuf:"varint,3,opt,name=IsProvider" json:"IsProvider,omitempty", bson:"IsProvider,omitempty"`
	ServicePort          string   `protobuf:"bytes,4,opt,name=ServicePort" json:"ServicePort,omitempty", bson:"ServicePort,omitempty"`
	ConnectURL           string   `protobuf:"bytes,5,opt,name=ConnectURL" json:"ConnectURL,omitempty", bson:"ConnectURL,omitempty"`
	IsTLSEnabled         bool     `protobuf:"varint,6,opt,name=IsTLSEnabled" json:"IsTLSEnabled,omitempty", bson:"IsTLSEnabled,omitempty"`
	KeyFile              []byte   `protobuf:"bytes,7,opt,name=KeyFile,proto3" json:"KeyFile,omitempty", bson:"KeyFile,omitempty"`
	CertFile             []byte   `protobuf:"bytes,8,opt,name=CertFile,proto3" json:"CertFile,omitempty", bson:"CertFile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdaptorOptions) Reset()         { *m = AdaptorOptions{} }
func (m *AdaptorOptions) String() string { return proto.CompactTextString(m) }
func (*AdaptorOptions) ProtoMessage()    {}
func (*AdaptorOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_mixer_c5f665b2adfc82aa, []int{0}
}
func (m *AdaptorOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdaptorOptions.Unmarshal(m, b)
}
func (m *AdaptorOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdaptorOptions.Marshal(b, m, deterministic)
}
func (dst *AdaptorOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdaptorOptions.Merge(dst, src)
}
func (m *AdaptorOptions) XXX_Size() int {
	return xxx_messageInfo_AdaptorOptions.Size(m)
}
func (m *AdaptorOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_AdaptorOptions.DiscardUnknown(m)
}

var xxx_messageInfo_AdaptorOptions proto.InternalMessageInfo

func (m *AdaptorOptions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AdaptorOptions) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *AdaptorOptions) GetIsProvider() bool {
	if m != nil {
		return m.IsProvider
	}
	return false
}

func (m *AdaptorOptions) GetServicePort() string {
	if m != nil {
		return m.ServicePort
	}
	return ""
}

func (m *AdaptorOptions) GetConnectURL() string {
	if m != nil {
		return m.ConnectURL
	}
	return ""
}

func (m *AdaptorOptions) GetIsTLSEnabled() bool {
	if m != nil {
		return m.IsTLSEnabled
	}
	return false
}

func (m *AdaptorOptions) GetKeyFile() []byte {
	if m != nil {
		return m.KeyFile
	}
	return nil
}

func (m *AdaptorOptions) GetCertFile() []byte {
	if m != nil {
		return m.CertFile
	}
	return nil
}

type CreateAdaptorRequest struct {
	AdaptorOptions       *AdaptorOptions `protobuf:"bytes,1,opt,name=AdaptorOptions" json:"AdaptorOptions,omitempty", bson:"AdaptorOptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreateAdaptorRequest) Reset()         { *m = CreateAdaptorRequest{} }
func (m *CreateAdaptorRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAdaptorRequest) ProtoMessage()    {}
func (*CreateAdaptorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_mixer_c5f665b2adfc82aa, []int{1}
}
func (m *CreateAdaptorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAdaptorRequest.Unmarshal(m, b)
}
func (m *CreateAdaptorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAdaptorRequest.Marshal(b, m, deterministic)
}
func (dst *CreateAdaptorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAdaptorRequest.Merge(dst, src)
}
func (m *CreateAdaptorRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAdaptorRequest.Size(m)
}
func (m *CreateAdaptorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAdaptorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAdaptorRequest proto.InternalMessageInfo

func (m *CreateAdaptorRequest) GetAdaptorOptions() *AdaptorOptions {
	if m != nil {
		return m.AdaptorOptions
	}
	return nil
}

type CreateAdaptorResponse struct {
	AdaptorID            string   `protobuf:"bytes,1,opt,name=AdaptorID" json:"AdaptorID,omitempty", bson:"AdaptorID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAdaptorResponse) Reset()         { *m = CreateAdaptorResponse{} }
func (m *CreateAdaptorResponse) String() string { return proto.CompactTextString(m) }
func (*CreateAdaptorResponse) ProtoMessage()    {}
func (*CreateAdaptorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_mixer_c5f665b2adfc82aa, []int{2}
}
func (m *CreateAdaptorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAdaptorResponse.Unmarshal(m, b)
}
func (m *CreateAdaptorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAdaptorResponse.Marshal(b, m, deterministic)
}
func (dst *CreateAdaptorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAdaptorResponse.Merge(dst, src)
}
func (m *CreateAdaptorResponse) XXX_Size() int {
	return xxx_messageInfo_CreateAdaptorResponse.Size(m)
}
func (m *CreateAdaptorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAdaptorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAdaptorResponse proto.InternalMessageInfo

func (m *CreateAdaptorResponse) GetAdaptorID() string {
	if m != nil {
		return m.AdaptorID
	}
	return ""
}

type DeleteAdaptorRequest struct {
	AdaptorID            string   `protobuf:"bytes,1,opt,name=AdaptorID" json:"AdaptorID,omitempty", bson:"AdaptorID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAdaptorRequest) Reset()         { *m = DeleteAdaptorRequest{} }
func (m *DeleteAdaptorRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAdaptorRequest) ProtoMessage()    {}
func (*DeleteAdaptorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_mixer_c5f665b2adfc82aa, []int{3}
}
func (m *DeleteAdaptorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAdaptorRequest.Unmarshal(m, b)
}
func (m *DeleteAdaptorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAdaptorRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteAdaptorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAdaptorRequest.Merge(dst, src)
}
func (m *DeleteAdaptorRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAdaptorRequest.Size(m)
}
func (m *DeleteAdaptorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAdaptorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAdaptorRequest proto.InternalMessageInfo

func (m *DeleteAdaptorRequest) GetAdaptorID() string {
	if m != nil {
		return m.AdaptorID
	}
	return ""
}

type DeleteAdaptorResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAdaptorResponse) Reset()         { *m = DeleteAdaptorResponse{} }
func (m *DeleteAdaptorResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteAdaptorResponse) ProtoMessage()    {}
func (*DeleteAdaptorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_mixer_c5f665b2adfc82aa, []int{4}
}
func (m *DeleteAdaptorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAdaptorResponse.Unmarshal(m, b)
}
func (m *DeleteAdaptorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAdaptorResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteAdaptorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAdaptorResponse.Merge(dst, src)
}
func (m *DeleteAdaptorResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteAdaptorResponse.Size(m)
}
func (m *DeleteAdaptorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAdaptorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAdaptorResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*AdaptorOptions)(nil), "grpc.mixer.v1.AdaptorOptions")
	proto.RegisterType((*CreateAdaptorRequest)(nil), "grpc.mixer.v1.CreateAdaptorRequest")
	proto.RegisterType((*CreateAdaptorResponse)(nil), "grpc.mixer.v1.CreateAdaptorResponse")
	proto.RegisterType((*DeleteAdaptorRequest)(nil), "grpc.mixer.v1.DeleteAdaptorRequest")
	proto.RegisterType((*DeleteAdaptorResponse)(nil), "grpc.mixer.v1.DeleteAdaptorResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MixerClient is the client API for Mixer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MixerClient interface {
	CreateAdaptor(ctx context.Context, in *CreateAdaptorRequest, opts ...grpc.CallOption) (*CreateAdaptorResponse, error)
	DeleteAdaptor(ctx context.Context, in *DeleteAdaptorRequest, opts ...grpc.CallOption) (*DeleteAdaptorResponse, error)
}

type mixerClient struct {
	cc *grpc.ClientConn
}

func NewMixerClient(cc *grpc.ClientConn) MixerClient {
	return &mixerClient{cc}
}

func (c *mixerClient) CreateAdaptor(ctx context.Context, in *CreateAdaptorRequest, opts ...grpc.CallOption) (*CreateAdaptorResponse, error) {
	out := new(CreateAdaptorResponse)
	err := c.cc.Invoke(ctx, "/grpc.mixer.v1.Mixer/CreateAdaptor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mixerClient) DeleteAdaptor(ctx context.Context, in *DeleteAdaptorRequest, opts ...grpc.CallOption) (*DeleteAdaptorResponse, error) {
	out := new(DeleteAdaptorResponse)
	err := c.cc.Invoke(ctx, "/grpc.mixer.v1.Mixer/DeleteAdaptor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MixerServer is the server API for Mixer service.
type MixerServer interface {
	CreateAdaptor(context.Context, *CreateAdaptorRequest) (*CreateAdaptorResponse, error)
	DeleteAdaptor(context.Context, *DeleteAdaptorRequest) (*DeleteAdaptorResponse, error)
}

func RegisterMixerServer(s *grpc.Server, srv MixerServer) {
	s.RegisterService(&_Mixer_serviceDesc, srv)
}

func _Mixer_CreateAdaptor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAdaptorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).CreateAdaptor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.mixer.v1.Mixer/CreateAdaptor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).CreateAdaptor(ctx, req.(*CreateAdaptorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mixer_DeleteAdaptor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAdaptorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MixerServer).DeleteAdaptor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.mixer.v1.Mixer/DeleteAdaptor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MixerServer).DeleteAdaptor(ctx, req.(*DeleteAdaptorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Mixer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.mixer.v1.Mixer",
	HandlerType: (*MixerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAdaptor",
			Handler:    _Mixer_CreateAdaptor_Handler,
		},
		{
			MethodName: "DeleteAdaptor",
			Handler:    _Mixer_DeleteAdaptor_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mixer.proto",
}

func init() { proto.RegisterFile("mixer.proto", fileDescriptor_mixer_c5f665b2adfc82aa) }

var fileDescriptor_mixer_c5f665b2adfc82aa = []byte{
	// 338 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0x4f, 0x4f, 0xfa, 0x40,
	0x10, 0xa5, 0xbf, 0x1f, 0x7f, 0x07, 0xf0, 0x30, 0x81, 0xb8, 0x21, 0x6a, 0x9a, 0xd5, 0x03, 0xa7,
	0x26, 0xa2, 0x7e, 0x00, 0x03, 0x98, 0x10, 0x51, 0x49, 0xd1, 0x9b, 0x1e, 0x4a, 0x99, 0x98, 0x26,
	0xa5, 0x5b, 0x77, 0x57, 0xa2, 0x9f, 0xcf, 0xaf, 0xe5, 0xc1, 0x74, 0x41, 0xa4, 0xa5, 0xe1, 0xb6,
	0xf3, 0x66, 0xde, 0x9b, 0x37, 0x2f, 0x0b, 0xf5, 0x45, 0xf0, 0x41, 0xd2, 0x89, 0xa5, 0xd0, 0x02,
	0x9b, 0xaf, 0x32, 0xf6, 0x9d, 0x15, 0xb2, 0x3c, 0xe7, 0xdf, 0x16, 0x1c, 0x5c, 0xcf, 0xbd, 0x58,
	0x0b, 0xf9, 0x10, 0xeb, 0x40, 0x44, 0x0a, 0x11, 0x8a, 0xf7, 0xde, 0x82, 0x98, 0x65, 0x5b, 0xdd,
	0x9a, 0x6b, 0xde, 0xd8, 0x81, 0xea, 0x24, 0xa1, 0xfb, 0x22, 0x64, 0xff, 0x0c, 0xbe, 0xa9, 0xf1,
	0x04, 0x60, 0xa4, 0x26, 0x52, 0x2c, 0x83, 0x39, 0x49, 0xf6, 0xdf, 0xb6, 0xba, 0x55, 0x77, 0x0b,
	0x41, 0x1b, 0xea, 0x53, 0x92, 0xcb, 0xc0, 0xa7, 0x89, 0x90, 0x9a, 0x15, 0x0d, 0x7d, 0x1b, 0x4a,
	0x14, 0xfa, 0x22, 0x8a, 0xc8, 0xd7, 0x4f, 0xee, 0x98, 0x95, 0xcc, 0xc0, 0x16, 0x82, 0x1c, 0x1a,
	0x23, 0xf5, 0x38, 0x9e, 0x0e, 0x23, 0x6f, 0x16, 0xd2, 0x9c, 0x95, 0xcd, 0x8e, 0x14, 0x86, 0x0c,
	0x2a, 0xb7, 0xf4, 0x79, 0x13, 0x84, 0xc4, 0x2a, 0xb6, 0xd5, 0x6d, 0xb8, 0xbf, 0x65, 0xe2, 0xbd,
	0x4f, 0x52, 0x9b, 0x56, 0xd5, 0xb4, 0x36, 0x35, 0x7f, 0x81, 0x56, 0x5f, 0x92, 0xa7, 0x69, 0x9d,
	0x81, 0x4b, 0x6f, 0xef, 0xa4, 0x34, 0x0e, 0xb3, 0xa9, 0x98, 0x34, 0xea, 0xbd, 0x63, 0x27, 0x15,
	0x9f, 0x93, 0x1e, 0x72, 0x33, 0x24, 0x7e, 0x05, 0xed, 0x8c, 0xbc, 0x8a, 0x45, 0xa4, 0x08, 0x8f,
	0xa0, 0xb6, 0x86, 0x46, 0x83, 0x75, 0xd0, 0x7f, 0x00, 0xbf, 0x84, 0xd6, 0x80, 0x42, 0xda, 0x71,
	0xb5, 0x9f, 0x75, 0x08, 0xed, 0x0c, 0x6b, 0xb5, 0xac, 0xf7, 0x65, 0x41, 0xe9, 0x2e, 0x71, 0x8c,
	0xcf, 0xd0, 0x4c, 0xf9, 0xc1, 0xd3, 0xcc, 0x3d, 0x79, 0x61, 0x74, 0xce, 0xf6, 0x0f, 0xad, 0xb6,
	0xf0, 0x42, 0xa2, 0x9e, 0x32, 0xb0, 0xa3, 0x9e, 0x77, 0xd4, 0x8e, 0x7a, 0xee, 0x0d, 0xbc, 0x30,
	0x2b, 0x9b, 0xff, 0x7b, 0xf1, 0x13, 0x00, 0x00, 0xff, 0xff, 0x96, 0x00, 0x6f, 0x8d, 0xce, 0x02,
	0x00, 0x00,
}
