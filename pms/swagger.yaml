swagger: "2.0"
info:
  title: project management service
  description: HTTP API for project management service
  version: "1.0.0"
consumes:
  - "application/json"
produces:
  - "application/json"
paths:
  /projects:
    post:
      summary: Adds new project
      description: |
        Adds new project to the list of projects owned by user identified using
        the provided access token.
      tags:
        - projects
      parameters:
        - $ref: "#/parameters/Authorization"
        - name: project
          description: JSON-formatted document describing the new project.
          in: body
          schema:
            $ref: "#/definitions/CreateProjectReq"
          required: true
      responses:
        201:
          description: Project registered.
          headers:
            Location:
              type: string
              description: Created project's relative URL (i.e. /projects/{projectId}).
        400:
          description: Failed due to malformed JSON.
        403:
          description: Missing or invalid access token provided.
        415:
          description: Missing or invalid content type.
        500:
          $ref: "#/responses/ServiceError"
  /views:
    get:
      summary: Retrieves managed projects
      description: |
        Retrieves a list of managed projects. Due to performance concerns, data
        is retrieved in subsets. The API projects must ensure that the entire
        dataset is consumed either by making subsequent requests, or by
        increasing the subset size of the initial request.
      tags:
        - projects
      parameters:
        - $ref: "#/parameters/Authorization"
        - $ref: "#/parameters/Limit"
        - $ref: "#/parameters/Offset"
        - $ref: "#/parameters/Name"
        - $ref: "#/parameters/Metadata"
      responses:
        200:
          description: Data retrieved.
          schema:
            $ref: "#/definitions/ProjectsPage"
        400:
          description: Failed due to malformed query parameters.
        403:
          description: Missing or invalid access token provided.
        500:
          $ref: "#/responses/ServiceError"
  /projects/{projectId}:
    get:
      summary: Retrieves project info
      tags:
        - projects
      parameters:
        - $ref: "#/parameters/Authorization"
        - $ref: "#/parameters/ProjectId"
      responses:
        200:
          description: Data retrieved.
          schema:
            $ref: "#/definitions/ProjectRes"
        403:
          description: Missing or invalid access token provided.
        404:
          description: project does not exist.
        500:
          $ref: "#/responses/ServiceError"
    put:
      summary: Updates project info
      description: |
        Update is performed by replacing the current resource data with values
        provided in a request payload. Note that the project's ID
        cannot be changed.
      tags:
        - projects
      parameters:
        - $ref: "#/parameters/Authorization"
        - $ref: "#/parameters/ProjectId"
        - name: project
          description: JSON-formatted document describing the updated project.
          in: body
          schema:
            $ref: "#/definitions/UpdateProjectReq"
          required: true
      responses:
        200:
          description: Thing updated.
        400:
          description: Failed due to malformed JSON.
        403:
          description: Missing or invalid access token provided.
        404:
          description: Thing does not exist.
        415:
          description: Missing or invalid content type.
        500:
          $ref: "#/responses/ServiceError"
    delete:
      summary: Removes a project
      description: |
        Removes a project. The service will ensure that the project is removed
      tags:
        - projects
      parameters:
        - $ref: "#/parameters/Authorization"
        - $ref: "#/parameters/ProjectId"
      responses:
        204:
          description: Project removed.
        400:
          description: Failed due to malformed project's ID.
        403:
          description: Missing or invalid access token provided.
        500:
          $ref: "#/responses/ServiceError"

parameters:
  Authorization:
    name: Authorization
    description: User's access token.
    in: header
    type: string
    required: true
  ProjectId:
    name: projectId
    description: Unique project identifier.
    in: path
    type: integer
    minimum: 1
    required: true
  Limit:
    name: limit
    description: Size of the subset to retrieve.
    in: query
    type: integer
    default: 10
    maximum: 100
    minimum: 1
    required: false
  Offset:
    name: offset
    description: Number of items to skip during retrieval.
    in: query
    type: integer
    default: 0
    minimum: 0
    required: false
  Name:
    name: name
    description: Name filter. Filtering is performed as a case-insensitive partial match.
    in: query
    type: string
    minimum: 0
    required: false
  Metadata:
    name: metadata
    description: Metadata filter. Filtering is performed matching the parameter with metadata on top level. Parameter is json.
    in: query
    type: string
    minimum: 0
    required: false

responses:
  ServiceError:
    description: Unexpected server-side error occurred.

definitions:
  ProjectsPage:
    type: object
    properties:
      projects:
        type: array
        minItems: 0
        uniqueItems: true
        items:
          $ref: "#/definitions/ProjectRes"
      total:
        type: integer
        description: Total number of items.
      offset:
        type: integer
        description: Number of items to skip during retrieval.
      limit:
        type: integer
        description: Maximum number of items to return in one page.
    required:
      - projects
  ProjectRes:
    type: object
    properties:
      owner:
        type: string
        description: the owner of the project
      id:
        type: string
        description: Unique thing identifier generated by the service.
      name:
        type: string
        description: Free-form thing name.
      created:
        type: integer
        description: project created time
      updated:
        type: integer
        description: project updated time
      metadata:
        type: object
        description: Arbitrary, object-encoded thing's data.
    required:
      - owner
      - id
  CreateProjectReq:
    type: object
    properties:
      name:
        type: string
        description: Free-form project name.
      project:
        type: object
        description: a project's basic attributions
      metadata:
        type: object
        description: Arbitrary, object-encoded project's data.
  UpdateProjectReq:
    type: object
    properties:
      name:
        type: string
        description: Free-form project name.
      thingid:
        type: string
        description: thingid
      project:
        type: object
        description: a project's basic attributions
      metadata:
        type: object
        description: Arbitrary, object-encoded thing's data.
