swagger: "2.0"
info:
  title: pandas view variable model management service
  description: HTTP API for managing platform view variable and model.
  version: "1.0.0"
consumes:
  - "application/json"
produces:
  - "application/json"
paths:
  /models:
    post:
      summary: Adds new model 
      description: |
        Adds new model to the list of model owned by user identified using
        the provided access token.
      tags:
        - models 
      parameters:
        - $ref: "#/parameters/Authorization"
        - name: model 
          description: JSON-formatted document describing the new  model.
          in: body
          schema:
            $ref: "#/definitions/CreateModelReq"
          required: true
      responses:
        201:
          description: Model registered.
          headers:
            Location:
              type: string
              description: Created model's relative URL (i.e. /models/{thingId}).
        400:
          description: Failed due to malformed JSON.
        403:
          description: Missing or invalid access token provided.
        415:
          description: Missing or invalid content type.
        500:
          $ref: "#/responses/ServiceError"
    get:
      summary: Retrieves managed models
      description: |
        Retrieves a list of managed models. Due to performance concerns, data
        is retrieved in subsets. The API things must ensure that the entire
        dataset is consumed either by making subsequent requests, or by
        increasing the subset size of the initial request.
      tags:
        - things
      parameters:
        - $ref: "#/parameters/Authorization"
        - $ref: "#/parameters/Limit"
        - $ref: "#/parameters/Offset"
        - $ref: "#/parameters/Name"
        - $ref: "#/parameters/Metadata"
      responses:
        200:
          description: Data retrieved.
          schema:
            $ref: "#/definitions/ThingsPage"
        400:
          description: Failed due to malformed query parameters.
        403:
          description: Missing or invalid access token provided.
        500:
          $ref: "#/responses/ServiceError"
  /models/{modelId}:
    get:
      summary: Retrieves model info
      tags:
        - models 
      parameters:
        - $ref: "#/parameters/Authorization"
        - $ref: "#/parameters/ModelId"
      responses:
        200:
          description: Data retrieved.
          schema:
            $ref: "#/definitions/ThingRes"
        403:
          description: Missing or invalid access token provided.
        404:
          description: Thing does not exist.
        500:
          $ref: "#/responses/ServiceError"
    put:
      summary: Updates model info
      description: |
        Update is performed by replacing the current resource data with values
        provided in a request payload. Note that the thing's type and ID
        cannot be changed.
      tags:
        - models 
      parameters:
        - $ref: "#/parameters/Authorization"
        - $ref: "#/parameters/ModelId"
        - name: model 
          description: JSON-formatted document describing the updated thing.
          in: body
          schema:
            $ref: "#/definitions/UpdateThingReq"
          required: true
      responses:
        200:
          description: Model updated.
        400:
          description: Failed due to malformed JSON.
        403:
          description: Missing or invalid access token provided.
        404:
          description: Thing does not exist.
        415:
          description: Missing or invalid content type.
        500:
          $ref: "#/responses/ServiceError"
    delete:
      summary: Removes a model 
      description: |
        Removes a  model. The service will ensure that the removed model is
        disconnected from all of the existing channels.
      tags:
        - models 
      parameters:
        - $ref: "#/parameters/Authorization"
        - $ref: "#/parameters/ModelId"
      responses:
        204:
          description: Model removed.
        400:
          description: Failed due to malformed model's ID.
        403:
          description: Missing or invalid access token provided.
        500:
          $ref: "#/responses/ServiceError"


parameters:
  Authorization:
    name: Authorization
    description: User's access token.
    in: header
    type: string
    required: true
  ChanId:
    name: chanId
    description: Unique channel identifier.
    in: path
    type: integer
    minimum: 1
    required: true
  ThingId:
    name: thingId
    description: Unique thing identifier.
    in: path
    type: integer
    minimum: 1
    required: true
  Limit:
    name: limit
    description: Size of the subset to retrieve.
    in: query
    type: integer
    default: 10
    maximum: 100
    minimum: 1
    required: false
  Offset:
    name: offset
    description: Number of items to skip during retrieval.
    in: query
    type: integer
    default: 0
    minimum: 0
    required: false
  Name:
    name: name
    description: Name filter. Filtering is performed as a case-insensitive partial match.
    in: query
    type: string
    minimum: 0
    required: false
  Metadata:
    name: metadata
    description: Metadata filter. Filtering is performed matching the parameter with metadata on top level. Parameter is json.
    in: query
    type: string
    minimum: 0
    required: false

responses:
  ServiceError:
    description: Unexpected server-side error occurred.

definitions:
  ChannelsPage:
    type: object
    properties:
      channels:
        type: array
        minItems: 0
        uniqueItems: true
        items:
          $ref: "#/definitions/ChannelRes"
      total:
        type: integer
        description: Total number of items.
      offset:
        type: integer
        description: Number of items to skip during retrieval.
      limit:
        type: integer
        description: Maximum number of items to return in one page.
    required:
      - channels
  ChannelRes:
    type: object
    properties:
      id:
        type: string
        description: Unique channel identifier generated by the service.
      name:
        type: string
        description: Free-form channel name.
      metadata:
        type: object
        description: Arbitrary, object-encoded channel's data.
    required:
      - id
  ChannelReq:
    type: object
    properties:
      name:
        type: string
        description: Free-form channel name.
      metadata:
        type: object
        description: Arbitrary, object-encoded channel's data.
  ThingsPage:
    type: object
    properties:
      things:
        type: array
        minItems: 0
        uniqueItems: true
        items:
          $ref: "#/definitions/ThingRes"
      total:
        type: integer
        description: Total number of items.
      offset:
        type: integer
        description: Number of items to skip during retrieval.
      limit:
        type: integer
        description: Maximum number of items to return in one page.
    required:
      - things
  ThingRes:
    type: object
    properties:
      id:
        type: string
        description: Unique thing identifier generated by the service.
      name:
        type: string
        description: Free-form thing name.
      key:
        type: string
        description: Auto-generated access key.
      metadata:
        type: object
        description: Arbitrary, object-encoded thing's data.
    required:
      - id
      - type
      - key
  CreateThingReq:
    type: object
    properties:
      key:
        type: string
        description: |
          Thing key that is used for thing auth. If there is
          not one provided service will generate one in UUID
          format.
      name:
        type: string
        description: Free-form thing name.
      metadata:
        type: object
        description: Arbitrary, object-encoded thing's data.
  UpdateThingReq:
    type: object
    properties:
      name:
        type: string
        description: Free-form thing name.
      metadata:
        type: object
        description: Arbitrary, object-encoded thing's data.
  UpdateKeyReq:
    type: object
    properties:
      key:
        type: string
        description: Thing key that is used for thing auth.
  IdentityReq:
    type: object
    properties:
      token:
        type: string
        description: Thing key that is used for thing auth.
    required:
      - token
  AccessByIDReq:
    type: object
    properties:
      thing_id:
        type: string
        description: Thing ID by which thing is uniquely identified.
  Identity:
    type: object
    properties:
      id:
        type: string
        description: Thing unique identifier.
