// Code generated by go-swagger; DO NOT EDIT.

package deployment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteDeploymentReader is a Reader for the DeleteDeployment structure.
type DeleteDeploymentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDeploymentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteDeploymentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteDeploymentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteDeploymentOK creates a DeleteDeploymentOK with default headers values
func NewDeleteDeploymentOK() *DeleteDeploymentOK {
	return &DeleteDeploymentOK{}
}

/*DeleteDeploymentOK handles this case with default header values.

successfully operation
*/
type DeleteDeploymentOK struct {
}

func (o *DeleteDeploymentOK) Error() string {
	return fmt.Sprintf("[DELETE /deployments/{deploymentId}][%d] deleteDeploymentOK ", 200)
}

func (o *DeleteDeploymentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDeploymentNotFound creates a DeleteDeploymentNotFound with default headers values
func NewDeleteDeploymentNotFound() *DeleteDeploymentNotFound {
	return &DeleteDeploymentNotFound{}
}

/*DeleteDeploymentNotFound handles this case with default header values.

deployment not found
*/
type DeleteDeploymentNotFound struct {
}

func (o *DeleteDeploymentNotFound) Error() string {
	return fmt.Sprintf("[DELETE /deployments/{deploymentId}][%d] deleteDeploymentNotFound ", 404)
}

func (o *DeleteDeploymentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
