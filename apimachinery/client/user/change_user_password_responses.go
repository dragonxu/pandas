// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// ChangeUserPasswordReader is a Reader for the ChangeUserPassword structure.
type ChangeUserPasswordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ChangeUserPasswordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewChangeUserPasswordOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewChangeUserPasswordBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewChangeUserPasswordNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewChangeUserPasswordOK creates a ChangeUserPasswordOK with default headers values
func NewChangeUserPasswordOK() *ChangeUserPasswordOK {
	return &ChangeUserPasswordOK{}
}

/*ChangeUserPasswordOK handles this case with default header values.

successful operation
*/
type ChangeUserPasswordOK struct {
}

func (o *ChangeUserPasswordOK) Error() string {
	return fmt.Sprintf("[PATCH /users/{userId}][%d] changeUserPasswordOK ", 200)
}

func (o *ChangeUserPasswordOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeUserPasswordBadRequest creates a ChangeUserPasswordBadRequest with default headers values
func NewChangeUserPasswordBadRequest() *ChangeUserPasswordBadRequest {
	return &ChangeUserPasswordBadRequest{}
}

/*ChangeUserPasswordBadRequest handles this case with default header values.

Invalid username supplied
*/
type ChangeUserPasswordBadRequest struct {
}

func (o *ChangeUserPasswordBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /users/{userId}][%d] changeUserPasswordBadRequest ", 400)
}

func (o *ChangeUserPasswordBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeUserPasswordNotFound creates a ChangeUserPasswordNotFound with default headers values
func NewChangeUserPasswordNotFound() *ChangeUserPasswordNotFound {
	return &ChangeUserPasswordNotFound{}
}

/*ChangeUserPasswordNotFound handles this case with default header values.

User not found
*/
type ChangeUserPasswordNotFound struct {
}

func (o *ChangeUserPasswordNotFound) Error() string {
	return fmt.Sprintf("[PATCH /users/{userId}][%d] changeUserPasswordNotFound ", 404)
}

func (o *ChangeUserPasswordNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*ChangeUserPasswordBody change user password body
swagger:model ChangeUserPasswordBody
*/
type ChangeUserPasswordBody struct {

	// password
	Password string `json:"password,omitempty"`
}

// Validate validates this change user password body
func (o *ChangeUserPasswordBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ChangeUserPasswordBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ChangeUserPasswordBody) UnmarshalBinary(b []byte) error {
	var res ChangeUserPasswordBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
