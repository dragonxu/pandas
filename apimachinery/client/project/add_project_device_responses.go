// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// AddProjectDeviceReader is a Reader for the AddProjectDevice structure.
type AddProjectDeviceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddProjectDeviceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddProjectDeviceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddProjectDeviceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddProjectDeviceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddProjectDeviceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddProjectDeviceOK creates a AddProjectDeviceOK with default headers values
func NewAddProjectDeviceOK() *AddProjectDeviceOK {
	return &AddProjectDeviceOK{}
}

/*AddProjectDeviceOK handles this case with default header values.

successful operation
*/
type AddProjectDeviceOK struct {
}

func (o *AddProjectDeviceOK) Error() string {
	return fmt.Sprintf("[POST /projects/{projectId}/devices][%d] addProjectDeviceOK ", 200)
}

func (o *AddProjectDeviceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddProjectDeviceBadRequest creates a AddProjectDeviceBadRequest with default headers values
func NewAddProjectDeviceBadRequest() *AddProjectDeviceBadRequest {
	return &AddProjectDeviceBadRequest{}
}

/*AddProjectDeviceBadRequest handles this case with default header values.

bad request
*/
type AddProjectDeviceBadRequest struct {
}

func (o *AddProjectDeviceBadRequest) Error() string {
	return fmt.Sprintf("[POST /projects/{projectId}/devices][%d] addProjectDeviceBadRequest ", 400)
}

func (o *AddProjectDeviceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddProjectDeviceNotFound creates a AddProjectDeviceNotFound with default headers values
func NewAddProjectDeviceNotFound() *AddProjectDeviceNotFound {
	return &AddProjectDeviceNotFound{}
}

/*AddProjectDeviceNotFound handles this case with default header values.

project not found
*/
type AddProjectDeviceNotFound struct {
}

func (o *AddProjectDeviceNotFound) Error() string {
	return fmt.Sprintf("[POST /projects/{projectId}/devices][%d] addProjectDeviceNotFound ", 404)
}

func (o *AddProjectDeviceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddProjectDeviceInternalServerError creates a AddProjectDeviceInternalServerError with default headers values
func NewAddProjectDeviceInternalServerError() *AddProjectDeviceInternalServerError {
	return &AddProjectDeviceInternalServerError{}
}

/*AddProjectDeviceInternalServerError handles this case with default header values.

server internal error
*/
type AddProjectDeviceInternalServerError struct {
}

func (o *AddProjectDeviceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /projects/{projectId}/devices][%d] addProjectDeviceInternalServerError ", 500)
}

func (o *AddProjectDeviceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
