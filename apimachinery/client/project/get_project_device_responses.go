// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/cloustone/pandas/models"
)

// GetProjectDeviceReader is a Reader for the GetProjectDevice structure.
type GetProjectDeviceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProjectDeviceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProjectDeviceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetProjectDeviceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetProjectDeviceOK creates a GetProjectDeviceOK with default headers values
func NewGetProjectDeviceOK() *GetProjectDeviceOK {
	return &GetProjectDeviceOK{}
}

/*GetProjectDeviceOK handles this case with default header values.

successful operation
*/
type GetProjectDeviceOK struct {
	Payload models.Device
}

func (o *GetProjectDeviceOK) Error() string {
	return fmt.Sprintf("[GET /project/{projectId}/devices/{deviceId}][%d] getProjectDeviceOK  %+v", 200, o.Payload)
}

func (o *GetProjectDeviceOK) GetPayload() models.Device {
	return o.Payload
}

func (o *GetProjectDeviceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectDeviceNotFound creates a GetProjectDeviceNotFound with default headers values
func NewGetProjectDeviceNotFound() *GetProjectDeviceNotFound {
	return &GetProjectDeviceNotFound{}
}

/*GetProjectDeviceNotFound handles this case with default header values.

project or device not found
*/
type GetProjectDeviceNotFound struct {
}

func (o *GetProjectDeviceNotFound) Error() string {
	return fmt.Sprintf("[GET /project/{projectId}/devices/{deviceId}][%d] getProjectDeviceNotFound ", 404)
}

func (o *GetProjectDeviceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
