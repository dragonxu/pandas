// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UpdateProjectDeviceStatusReader is a Reader for the UpdateProjectDeviceStatus structure.
type UpdateProjectDeviceStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateProjectDeviceStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateProjectDeviceStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateProjectDeviceStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateProjectDeviceStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateProjectDeviceStatusOK creates a UpdateProjectDeviceStatusOK with default headers values
func NewUpdateProjectDeviceStatusOK() *UpdateProjectDeviceStatusOK {
	return &UpdateProjectDeviceStatusOK{}
}

/*UpdateProjectDeviceStatusOK handles this case with default header values.

successful operation
*/
type UpdateProjectDeviceStatusOK struct {
}

func (o *UpdateProjectDeviceStatusOK) Error() string {
	return fmt.Sprintf("[PATCH /project/{projectId}/devices/{deviceId}][%d] updateProjectDeviceStatusOK ", 200)
}

func (o *UpdateProjectDeviceStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProjectDeviceStatusBadRequest creates a UpdateProjectDeviceStatusBadRequest with default headers values
func NewUpdateProjectDeviceStatusBadRequest() *UpdateProjectDeviceStatusBadRequest {
	return &UpdateProjectDeviceStatusBadRequest{}
}

/*UpdateProjectDeviceStatusBadRequest handles this case with default header values.

Bad request
*/
type UpdateProjectDeviceStatusBadRequest struct {
}

func (o *UpdateProjectDeviceStatusBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /project/{projectId}/devices/{deviceId}][%d] updateProjectDeviceStatusBadRequest ", 400)
}

func (o *UpdateProjectDeviceStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProjectDeviceStatusInternalServerError creates a UpdateProjectDeviceStatusInternalServerError with default headers values
func NewUpdateProjectDeviceStatusInternalServerError() *UpdateProjectDeviceStatusInternalServerError {
	return &UpdateProjectDeviceStatusInternalServerError{}
}

/*UpdateProjectDeviceStatusInternalServerError handles this case with default header values.

server internal error
*/
type UpdateProjectDeviceStatusInternalServerError struct {
}

func (o *UpdateProjectDeviceStatusInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /project/{projectId}/devices/{deviceId}][%d] updateProjectDeviceStatusInternalServerError ", 500)
}

func (o *UpdateProjectDeviceStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
