// Code generated by go-swagger; DO NOT EDIT.

package rulechain

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// DownloadRuleChainReader is a Reader for the DownloadRuleChain structure.
type DownloadRuleChainReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DownloadRuleChainReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDownloadRuleChainOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewDownloadRuleChainInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDownloadRuleChainOK creates a DownloadRuleChainOK with default headers values
func NewDownloadRuleChainOK() *DownloadRuleChainOK {
	return &DownloadRuleChainOK{}
}

/*DownloadRuleChainOK handles this case with default header values.

excute successfully
*/
type DownloadRuleChainOK struct {
	Payload *DownloadRuleChainOKBody
}

func (o *DownloadRuleChainOK) Error() string {
	return fmt.Sprintf("[POST /rulechains/{ruleChainId}/download][%d] downloadRuleChainOK  %+v", 200, o.Payload)
}

func (o *DownloadRuleChainOK) GetPayload() *DownloadRuleChainOKBody {
	return o.Payload
}

func (o *DownloadRuleChainOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DownloadRuleChainOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadRuleChainInternalServerError creates a DownloadRuleChainInternalServerError with default headers values
func NewDownloadRuleChainInternalServerError() *DownloadRuleChainInternalServerError {
	return &DownloadRuleChainInternalServerError{}
}

/*DownloadRuleChainInternalServerError handles this case with default header values.

Server internal error
*/
type DownloadRuleChainInternalServerError struct {
}

func (o *DownloadRuleChainInternalServerError) Error() string {
	return fmt.Sprintf("[POST /rulechains/{ruleChainId}/download][%d] downloadRuleChainInternalServerError ", 500)
}

func (o *DownloadRuleChainInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*DownloadRuleChainOKBody download rule chain o k body
swagger:model DownloadRuleChainOKBody
*/
type DownloadRuleChainOKBody struct {

	// the result of excution
	Status bool `json:"status,omitempty"`
}

// Validate validates this download rule chain o k body
func (o *DownloadRuleChainOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DownloadRuleChainOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DownloadRuleChainOKBody) UnmarshalBinary(b []byte) error {
	var res DownloadRuleChainOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
