// Code generated by go-swagger; DO NOT EDIT.

package rulechain

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/cloustone/pandas/models"
)

// GetRuleChainsReader is a Reader for the GetRuleChains structure.
type GetRuleChainsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRuleChainsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRuleChainsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRuleChainsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRuleChainsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRuleChainsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRuleChainsOK creates a GetRuleChainsOK with default headers values
func NewGetRuleChainsOK() *GetRuleChainsOK {
	return &GetRuleChainsOK{}
}

/*GetRuleChainsOK handles this case with default header values.

successfully operation
*/
type GetRuleChainsOK struct {
	Payload []models.RuleChain
}

func (o *GetRuleChainsOK) Error() string {
	return fmt.Sprintf("[GET /rulechains][%d] getRuleChainsOK  %+v", 200, o.Payload)
}

func (o *GetRuleChainsOK) GetPayload() []models.RuleChain {
	return o.Payload
}

func (o *GetRuleChainsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRuleChainsBadRequest creates a GetRuleChainsBadRequest with default headers values
func NewGetRuleChainsBadRequest() *GetRuleChainsBadRequest {
	return &GetRuleChainsBadRequest{}
}

/*GetRuleChainsBadRequest handles this case with default header values.

Bad request
*/
type GetRuleChainsBadRequest struct {
}

func (o *GetRuleChainsBadRequest) Error() string {
	return fmt.Sprintf("[GET /rulechains][%d] getRuleChainsBadRequest ", 400)
}

func (o *GetRuleChainsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRuleChainsNotFound creates a GetRuleChainsNotFound with default headers values
func NewGetRuleChainsNotFound() *GetRuleChainsNotFound {
	return &GetRuleChainsNotFound{}
}

/*GetRuleChainsNotFound handles this case with default header values.

Not found
*/
type GetRuleChainsNotFound struct {
}

func (o *GetRuleChainsNotFound) Error() string {
	return fmt.Sprintf("[GET /rulechains][%d] getRuleChainsNotFound ", 404)
}

func (o *GetRuleChainsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRuleChainsInternalServerError creates a GetRuleChainsInternalServerError with default headers values
func NewGetRuleChainsInternalServerError() *GetRuleChainsInternalServerError {
	return &GetRuleChainsInternalServerError{}
}

/*GetRuleChainsInternalServerError handles this case with default header values.

Internal error
*/
type GetRuleChainsInternalServerError struct {
}

func (o *GetRuleChainsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /rulechains][%d] getRuleChainsInternalServerError ", 500)
}

func (o *GetRuleChainsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
