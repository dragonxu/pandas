// Code generated by go-swagger; DO NOT EDIT.

package rulechain

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewSetRootRuleChainParams creates a new SetRootRuleChainParams object
// with the default values initialized.
func NewSetRootRuleChainParams() *SetRootRuleChainParams {
	var ()
	return &SetRootRuleChainParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSetRootRuleChainParamsWithTimeout creates a new SetRootRuleChainParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSetRootRuleChainParamsWithTimeout(timeout time.Duration) *SetRootRuleChainParams {
	var ()
	return &SetRootRuleChainParams{

		timeout: timeout,
	}
}

// NewSetRootRuleChainParamsWithContext creates a new SetRootRuleChainParams object
// with the default values initialized, and the ability to set a context for a request
func NewSetRootRuleChainParamsWithContext(ctx context.Context) *SetRootRuleChainParams {
	var ()
	return &SetRootRuleChainParams{

		Context: ctx,
	}
}

// NewSetRootRuleChainParamsWithHTTPClient creates a new SetRootRuleChainParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSetRootRuleChainParamsWithHTTPClient(client *http.Client) *SetRootRuleChainParams {
	var ()
	return &SetRootRuleChainParams{
		HTTPClient: client,
	}
}

/*SetRootRuleChainParams contains all the parameters to send to the API endpoint
for the set root rule chain operation typically these are written to a http.Request
*/
type SetRootRuleChainParams struct {

	/*RuleChainID
	  rule chain id

	*/
	RuleChainID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the set root rule chain params
func (o *SetRootRuleChainParams) WithTimeout(timeout time.Duration) *SetRootRuleChainParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the set root rule chain params
func (o *SetRootRuleChainParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the set root rule chain params
func (o *SetRootRuleChainParams) WithContext(ctx context.Context) *SetRootRuleChainParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the set root rule chain params
func (o *SetRootRuleChainParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the set root rule chain params
func (o *SetRootRuleChainParams) WithHTTPClient(client *http.Client) *SetRootRuleChainParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the set root rule chain params
func (o *SetRootRuleChainParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRuleChainID adds the ruleChainID to the set root rule chain params
func (o *SetRootRuleChainParams) WithRuleChainID(ruleChainID string) *SetRootRuleChainParams {
	o.SetRuleChainID(ruleChainID)
	return o
}

// SetRuleChainID adds the ruleChainId to the set root rule chain params
func (o *SetRootRuleChainParams) SetRuleChainID(ruleChainID string) {
	o.RuleChainID = ruleChainID
}

// WriteToRequest writes these params to a swagger request
func (o *SetRootRuleChainParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param ruleChainId
	if err := r.SetPathParam("ruleChainId", o.RuleChainID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
