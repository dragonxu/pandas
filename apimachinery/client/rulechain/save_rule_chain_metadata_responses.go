// Code generated by go-swagger; DO NOT EDIT.

package rulechain

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// SaveRuleChainMetadataReader is a Reader for the SaveRuleChainMetadata structure.
type SaveRuleChainMetadataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SaveRuleChainMetadataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSaveRuleChainMetadataOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSaveRuleChainMetadataBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSaveRuleChainMetadataNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSaveRuleChainMetadataOK creates a SaveRuleChainMetadataOK with default headers values
func NewSaveRuleChainMetadataOK() *SaveRuleChainMetadataOK {
	return &SaveRuleChainMetadataOK{}
}

/*SaveRuleChainMetadataOK handles this case with default header values.

excute successfully
*/
type SaveRuleChainMetadataOK struct {
}

func (o *SaveRuleChainMetadataOK) Error() string {
	return fmt.Sprintf("[POST /rulechains/{ruleChainId}/metadata][%d] saveRuleChainMetadataOK ", 200)
}

func (o *SaveRuleChainMetadataOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSaveRuleChainMetadataBadRequest creates a SaveRuleChainMetadataBadRequest with default headers values
func NewSaveRuleChainMetadataBadRequest() *SaveRuleChainMetadataBadRequest {
	return &SaveRuleChainMetadataBadRequest{}
}

/*SaveRuleChainMetadataBadRequest handles this case with default header values.

Invalid metadata
*/
type SaveRuleChainMetadataBadRequest struct {
}

func (o *SaveRuleChainMetadataBadRequest) Error() string {
	return fmt.Sprintf("[POST /rulechains/{ruleChainId}/metadata][%d] saveRuleChainMetadataBadRequest ", 400)
}

func (o *SaveRuleChainMetadataBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSaveRuleChainMetadataNotFound creates a SaveRuleChainMetadataNotFound with default headers values
func NewSaveRuleChainMetadataNotFound() *SaveRuleChainMetadataNotFound {
	return &SaveRuleChainMetadataNotFound{}
}

/*SaveRuleChainMetadataNotFound handles this case with default header values.

rule chain not found
*/
type SaveRuleChainMetadataNotFound struct {
}

func (o *SaveRuleChainMetadataNotFound) Error() string {
	return fmt.Sprintf("[POST /rulechains/{ruleChainId}/metadata][%d] saveRuleChainMetadataNotFound ", 404)
}

func (o *SaveRuleChainMetadataNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
