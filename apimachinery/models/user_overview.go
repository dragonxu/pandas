// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UserOverview user overview
// swagger:model UserOverview
type UserOverview struct {

	// day ave login num
	// Required: true
	DayAveLoginNum *int64 `json:"dayAveLoginNum"`

	// online num
	// Required: true
	OnlineNum *int64 `json:"onlineNum"`

	// today login num
	// Required: true
	TodayLoginNum *int64 `json:"todayLoginNum"`

	// total num
	// Required: true
	TotalNum *int64 `json:"totalNum"`
}

// Validate validates this user overview
func (m *UserOverview) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDayAveLoginNum(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOnlineNum(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTodayLoginNum(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalNum(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UserOverview) validateDayAveLoginNum(formats strfmt.Registry) error {

	if err := validate.Required("dayAveLoginNum", "body", m.DayAveLoginNum); err != nil {
		return err
	}

	return nil
}

func (m *UserOverview) validateOnlineNum(formats strfmt.Registry) error {

	if err := validate.Required("onlineNum", "body", m.OnlineNum); err != nil {
		return err
	}

	return nil
}

func (m *UserOverview) validateTodayLoginNum(formats strfmt.Registry) error {

	if err := validate.Required("todayLoginNum", "body", m.TodayLoginNum); err != nil {
		return err
	}

	return nil
}

func (m *UserOverview) validateTotalNum(formats strfmt.Registry) error {

	if err := validate.Required("totalNum", "body", m.TotalNum); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UserOverview) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserOverview) UnmarshalBinary(b []byte) error {
	var res UserOverview
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
