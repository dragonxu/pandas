// Code generated by go-swagger; DO NOT EDIT.

package rulechain

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetRuleChainMetadataOKCode is the HTTP code returned for type GetRuleChainMetadataOK
const GetRuleChainMetadataOKCode int = 200

/*GetRuleChainMetadataOK execute successfully

swagger:response getRuleChainMetadataOK
*/
type GetRuleChainMetadataOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetRuleChainMetadataOK creates GetRuleChainMetadataOK with default headers values
func NewGetRuleChainMetadataOK() *GetRuleChainMetadataOK {

	return &GetRuleChainMetadataOK{}
}

// WithPayload adds the payload to the get rule chain metadata o k response
func (o *GetRuleChainMetadataOK) WithPayload(payload string) *GetRuleChainMetadataOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get rule chain metadata o k response
func (o *GetRuleChainMetadataOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRuleChainMetadataOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetRuleChainMetadataNotFoundCode is the HTTP code returned for type GetRuleChainMetadataNotFound
const GetRuleChainMetadataNotFoundCode int = 404

/*GetRuleChainMetadataNotFound rule chain metadata not found

swagger:response getRuleChainMetadataNotFound
*/
type GetRuleChainMetadataNotFound struct {
}

// NewGetRuleChainMetadataNotFound creates GetRuleChainMetadataNotFound with default headers values
func NewGetRuleChainMetadataNotFound() *GetRuleChainMetadataNotFound {

	return &GetRuleChainMetadataNotFound{}
}

// WriteResponse to the client
func (o *GetRuleChainMetadataNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
