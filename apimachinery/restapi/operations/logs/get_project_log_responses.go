// Code generated by go-swagger; DO NOT EDIT.

package logs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cloustone/pandas/apimachinery/models"
)

// GetProjectLogOKCode is the HTTP code returned for type GetProjectLogOK
const GetProjectLogOKCode int = 200

/*GetProjectLogOK successful operation

swagger:response getProjectLogOK
*/
type GetProjectLogOK struct {

	/*
	  In: Body
	*/
	Payload []*models.DeviceLog `json:"body,omitempty"`
}

// NewGetProjectLogOK creates GetProjectLogOK with default headers values
func NewGetProjectLogOK() *GetProjectLogOK {

	return &GetProjectLogOK{}
}

// WithPayload adds the payload to the get project log o k response
func (o *GetProjectLogOK) WithPayload(payload []*models.DeviceLog) *GetProjectLogOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get project log o k response
func (o *GetProjectLogOK) SetPayload(payload []*models.DeviceLog) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProjectLogOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.DeviceLog, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetProjectLogNotFoundCode is the HTTP code returned for type GetProjectLogNotFound
const GetProjectLogNotFoundCode int = 404

/*GetProjectLogNotFound device not found

swagger:response getProjectLogNotFound
*/
type GetProjectLogNotFound struct {
}

// NewGetProjectLogNotFound creates GetProjectLogNotFound with default headers values
func NewGetProjectLogNotFound() *GetProjectLogNotFound {

	return &GetProjectLogNotFound{}
}

// WriteResponse to the client
func (o *GetProjectLogNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
