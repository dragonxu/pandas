// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetModelsParams creates a new GetModelsParams object
// no default values defined in spec.
func NewGetModelsParams() GetModelsParams {

	return GetModelsParams{}
}

// GetModelsParams contains all the bound params for the get models operation
// typically these are obtained from a http.Request
//
// swagger:parameters getModels
type GetModelsParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*Page number
	  In: query
	*/
	PageNumber *int64
	/*Number of persons returned
	  In: query
	*/
	PageSize *int64
	/*query object for.You can get query key from rulechain object. This is a json string. For example:
	  * 模糊检索name,description,category
	  {"name": "product"}
	  {"description": "abcd"}
	  {"category": "abcd"}
	  * 多条件模糊检索(and)
	  {"name": "product", "description": "abcd"}
	  * (deprecated) 模糊检索created_at,updated_at
	  {"created_at": "2018-10-11T09:13:26Z"}
	  {"updated_at": "2018-10-11T09:13:26Z"}
	  * 精确检索user_id,id,template_id,key,secret,status,data_format
	  {"user_id": "bevh8dkvr53g2n6u9l70"}
	  {"id": "bevh8dkvr53g2n6u9l70"}
	  {"template_id": "bevh8dkvr53g2n6u9l70"}
	  {"key": "bevh8dkvr53g2n6u9l70"}
	  {"secret": "bevh8dkvr53g2n6u9l70"}
	  {"data_format": "JSON"}
	  {"data_format": "XML"}

	  In: query
	*/
	Q *string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewGetModelsParams() beforehand.
func (o *GetModelsParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	qs := runtime.Values(r.URL.Query())

	qPageNumber, qhkPageNumber, _ := qs.GetOK("pageNumber")
	if err := o.bindPageNumber(qPageNumber, qhkPageNumber, route.Formats); err != nil {
		res = append(res, err)
	}

	qPageSize, qhkPageSize, _ := qs.GetOK("pageSize")
	if err := o.bindPageSize(qPageSize, qhkPageSize, route.Formats); err != nil {
		res = append(res, err)
	}

	qQ, qhkQ, _ := qs.GetOK("q")
	if err := o.bindQ(qQ, qhkQ, route.Formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindPageNumber binds and validates parameter PageNumber from query.
func (o *GetModelsParams) bindPageNumber(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: false
	// AllowEmptyValue: false
	if raw == "" { // empty values pass all other validations
		return nil
	}

	value, err := swag.ConvertInt64(raw)
	if err != nil {
		return errors.InvalidType("pageNumber", "query", "int64", raw)
	}
	o.PageNumber = &value

	return nil
}

// bindPageSize binds and validates parameter PageSize from query.
func (o *GetModelsParams) bindPageSize(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: false
	// AllowEmptyValue: false
	if raw == "" { // empty values pass all other validations
		return nil
	}

	value, err := swag.ConvertInt64(raw)
	if err != nil {
		return errors.InvalidType("pageSize", "query", "int64", raw)
	}
	o.PageSize = &value

	return nil
}

// bindQ binds and validates parameter Q from query.
func (o *GetModelsParams) bindQ(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: false
	// AllowEmptyValue: false
	if raw == "" { // empty values pass all other validations
		return nil
	}

	o.Q = &raw

	return nil
}
