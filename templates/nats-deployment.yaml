{{ if .Values.nats.deploy }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.docker.image_prefix}}nats 
  namespace: {{.Values.namespace.name}}
  labels:
    service: {{.Values.docker.image_prefix}}nats
spec:
  replicas: 1
  selector:
    matchLabels:
      service: {{.Values.docker.image_prefix}}nats
  template:
    metadata:
      labels:
        service: {{.Values.docker.image_prefix}}nats
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: {{.Values.docker.image_prefix}}nats 
{{ if .Values.docker.registry }}
          image: {{.Values.docker.registry}}/nats:1.3.0
{{ else }}
          image: nats:1.3.0
{{ end }}
          imagePullPolicy: IfNotPresent
          volumeMounts:
          - name: nats-claim0
            mountPath: /etc/nats
      restartPolicy: Always
      volumes:
      - name: nats-claim0
        persistentVolumeClaim:
          claimName: nats-claim0
      args:
      - -c
      - /etc/nats/nats.conf
---

apiVersion: v1
kind: Service
metadata:
  name: nats
  namespace: {{.Values.namespace.name}}
spec:
  ports:
  - port: {{ .Values.nats.port }}
    targetPort: {{ .Values.nats.targetport }}
  selector:
    service: {{.Values.docker.image_prefix}}nats
{{ end }}
